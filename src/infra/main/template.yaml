AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >-
  Main template for the account interventions service solution

Parameters:
  Environment:
    Description: The name of the environment to deploy to
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
      - integration
      - production
    Default: dev
  VpcStackName:
    Description: The name of the stack that defines the VPC
    Type: String
    Default: vpc
    AllowedPattern: ^[a-z0-9-]+$
    ConstraintDescription: must be a valid organization ID, made of lowercase letters and numbers
  PermissionsBoundary:
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Type: String
    Default: none
  CoreStackName:
    Description: The name of the Core VC Storage stack
    Type: String
    Default: account-interventions-service-core
  ProductTagValue:
    Description: Value for the Product Tag
    Type: String
    Default: GOV.UK One Login
  SystemTagValue:
    Description: Value for the System Tag
    Type: String
    Default: Account Interventions Service
  OwnerTagValue:
    Description: Value for the Owner Tag
    Type: String
    Default: PLACEHOLDER
  SourceTagValue:
    Description: Value for the Source Tag
    Type: String
    Default: govuk-one-login/account-interventions-service/src/infra/main/template.yaml
  AlertingSNSLowAlertNotificationTopicARN:
    Description: "The ARN of the Alerting SNS Low Alert Notification Topic"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/infra-alerting/SNS/LowAlertNotificationTopic/ARN"
  AlertingSNSHighAlertNotificationTopicARN:
    Description: "The ARN of the Alerting SNS High Alert Notification topic"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/infra-alerting/SNS/HighAlertNotificationTopic/ARN" #pragma: allowlist secret
  MainCloudWatchMetricNamespace:
    Description: "The namespace of the Main CloudWatch metric"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/id-reuse-storage-main/CloudWatch/Metric/Namespace" #pragma: allowlist secret  
Conditions:
  UsePermissionsBoundary: !Not [ !Equals [ !Ref PermissionsBoundary, 'none' ] ]

Mappings:
  EnvConfig:
    dev:
      LambdaLogLevel: DEBUG
    build:
      LambdaLogLevel: INFO
    staging:
      LambdaLogLevel: INFO
    integration:
      LambdaLogLevel: INFO
    production:
      LambdaLogLevel: INFO

Globals:
  Function:
    Runtime: nodejs18.x
    Architectures:
      - arm64
    Tracing: Active
    AutoPublishAlias: latest
    Environment:
      Variables:
        LOG_LEVEL: !FindInMap [ EnvConfig, !Ref Environment, LambdaLogLevel ]
    VpcConfig:
      SubnetIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
        - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId

Resources:
  InterventionHistoryWriterFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_115: Function is not configured for function-level concurrent execution Limit
    Properties:
      FunctionName: !Sub '${AWS::StackName}-InterventionHistoryWriterFunction'
      CodeUri: ../../../dist/handlers/intervention-history-handler
      Timeout: 10
      Handler: intervention-history-handler.handle
      Role: !GetAtt InterventionHistoryWriterFunctionRole.Arn
      Tags:
        CheckovRulesToSkip: CKV_AWS_116.CKV_AWS_115
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  InterventionHistoryWriterFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:  !Sub '${AWS::StackName}-InterventionHistoryWriterFunctionRole'
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  InterventionHistoryWriterFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-InterventionHistoryWriterFunctionPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "dynamodb:PutItem"
            Resource:
              - Fn::ImportValue: !Sub "${CoreStackName}-AccountInterventionsHistoryDynamoDBTableArn"
      Roles:
        - !Ref InterventionHistoryWriterFunctionRole

 #### TxMA ####
  TxMAIngressEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: AWS KMS key for encrypting the contents of messages in TxMA SQS queues
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource:
              - "*"
          - Effect: Allow
            Principal:
              Service: sqs.amazonaws.com
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource: "*"
            Condition:
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:*"

      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "${AWS::StackName}-TxMAIngressEncryptionKey"

  TxMAIngressEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-TxMAIngressEncryptionKey"
      TargetKeyId: !GetAtt TxMAIngressEncryptionKey.Arn

  TxMAIngressQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-TxMAIngressQueue"
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt TxMAIngressEncryptionKey.Arn
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TxMAIngressDLQ.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 5
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

#  TxMAIngressQueueNameSSM:
#    Type: AWS::SSM::Parameter
#    Properties:
#      Description: The Name of the TxMA Ingress Queue
#      Name: !Sub "/${AWS::StackName}/SQS/TxMAIngressQueue/Name"
#      Type: String
#      Value: !GetAtt TxMAIngressQueue.QueueName
#      Tags:
#        Environment: !Ref Environment
#        Product: !Ref ProductTagValue
#        System: !Ref SystemTagValue
#        Owner: !Ref OwnerTagValue
#        Source: !Ref SourceTagValue

  TxMAIngressQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    DependsOn: TxMAIngressQueue
    Properties:
      Queues:
        - !Ref TxMAIngressQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - "sqs:SendMessage"
            Resource: !GetAtt TxMAIngressQueue.Arn
            Principal:
              Service: sns.amazonaws.com

  TxMAIngressDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-TxMAIngressDLQ"
      KmsMasterKeyId: !Ref TxMAIngressEncryptionKeyAlias
      VisibilityTimeout: 0
      MessageRetentionPeriod: 1209600
      RedriveAllowPolicy:
        redrivePermission: byQueue
        sourceQueueArns:
          - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-TxMAIngressQueue"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

#  TxMAIngressDLQNameSSM:
#    Type: AWS::SSM::Parameter
#    Properties:
#      Description: The Name of the TxMA Ingress DLQ
#      Name: !Sub "/${AWS::StackName}/SQS/TxMAIngressDLQ/Name"
#      Type: String
#      Value: !GetAtt TxMAIngressDLQ.QueueName
#      Tags:
#        Environment: !Ref Environment
#        Product: !Ref ProductTagValue
#        System: !Ref SystemTagValue
#        Owner: !Ref OwnerTagValue
#        Source: !Ref SourceTagValue

### ALARMS ###

  TxMAIngressQueueProcessingSlowlyArn:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingSNSLowAlertNotificationTopicARN
      AlarmDescription: "The TxMA Ingress Queue is processing slowly."
      Namespace: !Ref MainCloudWatchMetricNamespace
      MetricName: TXMA_INGRESS_QUEUE_PROCESSING_SLOWLY
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Statistic: SampleCount
      Threshold: 1
      EvaluationPeriods: 1
      Period: 60
      TreatMissingData: notBreaching
      Dimensions:
        - Name: QueueName
          Value: !Ref AlertingSNSLowAlertNotificationTopicARN

  TxMAIngressQueueProcessingTooSlowlyArn:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingSNSHighAlertNotificationTopicARN
      AlarmDescription: "The TxMA Ingress Queue is processing slowly."
      Namespace: !Ref MainCloudWatchMetricNamespace
      MetricName: TXMA_INGRESS_QUEUE_PROCESSING_TOO_SLOWLY
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Statistic: SampleCount
      Threshold: 1
      EvaluationPeriods: 5
      Period: 60
      TreatMissingData: notBreaching
      Dimensions:
        - Name: QueueName
          Value: !Ref AlertingSNSHighAlertNotificationTopicARN