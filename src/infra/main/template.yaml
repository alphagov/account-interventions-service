AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >-
  The main Account Interventions Service (AIS) solution stack

Parameters:
  Environment:
    Description: The name of the environment to deploy to
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
      - integration
      - production
    Default: dev
  ApiStageName:
    Description: The stage name of the API
    Type: String
    Default: v1
  VpcStackName:
    Description: The name of the stack that defines the VPC
    Type: String
    Default: vpc
    AllowedPattern: ^[a-z0-9-]+$
  PermissionsBoundary:
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Type: String
    Default: none
  CSLSSubscriptionEndpointArn:
    Type: String
    Description: CSLS Subscription endpoint
    Default: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2"
  CodeSigningConfigArn:
    Description: Asserts that lambdas are signed when deployed.
    Type: String
    Default: none
  CoreStackName:
    Description: The name of the Core VC Storage stack
    Type: String
    Default: ais-core
  AlertingSNSLowAlertNotificationTopicARN:
    Description: "The ARN of the Alerting SNS Low Alert Notification topic"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/infra-alerting/SNS/LowAlertNotificationTopic/ARN" #pragma: allowlist secret
  LambdaDeploymentPreference:
    Description: "Specifies the configuration to enable gradual Lambda deployments. It can be used to set deployment type and also allows skipping canary deployment by setting to 'AllAtOnce'"
    Type: String
    Default: "Canary10Percent10Minutes"
    AllowedValues:
      - AllAtOnce
      - Canary10Percent5Minutes
      - Canary10Percent10Minutes
      - Canary10Percent15Minutes
      - Canary10Percent30Minutes
  RunBookURL:
    Description: "A Link to the AIS Runbook"
    Type: String
    Default: "https://govukverify.atlassian.net/wiki/spaces/AB/pages/3892215824/Alarms+Metrics+Monitoring"
  ProductTagValue:
    Description: Value for the Product Tag
    Type: String
    Default: GOV.UK One Login
  SystemTagValue:
    Description: Value for the System Tag
    Type: String
    Default: Account Interventions Service
  OwnerTagValue:
    Description: Value for the Owner Tag
    Type: String
    Default: interventions@digital.cabinet-office.gov.uk
  SourceTagValue:
    Description: Value for the Source Tag
    Type: String
    Default: govuk-one-login/account-interventions-service/src/infra/main/template.yaml

Conditions:
  IsInternal: !Or [!Equals [!Ref Environment, dev], !Equals [!Ref Environment, build]]
  IsNotInternal: !Not [ Condition: IsInternal ]
  UsePermissionsBoundary: !Not [ !Equals [ !Ref PermissionsBoundary, 'none' ] ]
  UseCodeSigning: !Not [ !Equals [ !Ref CodeSigningConfigArn, 'none' ] ]
  IsProd: !Or [!Equals [!Ref Environment, integration], !Equals [!Ref Environment, production]]

Mappings:
  EnvConfig:
    dev:
      LambdaLogLevel: DEBUG
      AccountDeletionProcessorSNSTopicARN: arn:aws:sns:eu-west-2:985326104449:UserAccountDeletion
      TxMAAccountID: 013758878511 # DI ID Reuse Core Dev
      TxMAIngressQueueARN: "Uses Internal TxMAIngressQueue"
      TxMAIngressQueueKmsKeyARN: "Uses the SQSEncryptionKey with Internal TxMAIngressQueue"
      OrchestrationVPCID: vpc-093ac0375aa3f291d # ID Reuse Core Dev VPC ID
      AuthenticationVPCID: vpc-093ac0375aa3f291d # ID Reuse Core Dev VPC ID
      OneLoginHomeVPCID: vpc-093ac0375aa3f291d # ID Reuse Core Dev VPC ID
      UniqueVPCEndpointIDs: none
      DynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables # pragma: allowlist secret
    build:
      LambdaLogLevel: INFO
      AccountDeletionProcessorSNSTopicARN: arn:aws:sns:eu-west-2:301577035144:UserAccountDeletion
      TxMAAccountID: 688341086169 # DI ID Reuse Core Build
      TxMAIngressQueueARN: "Uses Internal TxMAIngressQueue"
      TxMAIngressQueueKmsKeyARN: "Uses the SQSEncryptionKey with Internal TxMAIngressQueue"
      OrchestrationVPCID: vpc-0ae068c236590b989 # ID Reuse Core Build VPC ID
      AuthenticationVPCID: vpc-0ae068c236590b989 # ID Reuse Core Build VPC ID
      OneLoginHomeVPCID: vpc-0ae068c236590b989 # ID Reuse Core Build VPC ID
      UniqueVPCEndpointIDs: none
      DynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables # pragma: allowlist secret
    staging:
      LambdaLogLevel: INFO
      AccountDeletionProcessorSNSTopicARN: arn:aws:sns:eu-west-2:539729775994:UserAccountDeletion
      TxMAAccountID: 178023842775
      TxMAIngressQueueARN: arn:aws:sqs:eu-west-2:178023842775:self-staging-EC-SQS-Output-Queue-accountsIntervention
      TxMAIngressQueueKmsKeyARN: arn:aws:kms:eu-west-2:178023842775:key/e388cb30-2d78-431f-b1a6-847549a815aa
      OrchestrationVPCID: vpc-0ca40c7d13490419d # Auth & Orchestration Staging VPC ID
      AuthenticationVPCID: vpc-0b6f4a5d72f84ed0c # Authentication Sandbox VPC ID
      OneLoginHomeVPCID: vpc-02e4eb3b0cffc08b0 # Performance testing VPC ID
      UniqueVPCEndpointIDs: vpce-040f33c3489ff777b,vpce-0339d04aeb67de9da # Auth/Orch Sandbox & Staging VPC endpoint IDs
      DynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables # pragma: allowlist secret
    integration:
      LambdaLogLevel: INFO
      AccountDeletionProcessorSNSTopicARN: arn:aws:sns:eu-west-2:666500506359:UserAccountDeletion
      TxMAAccountID: 729485541398
      TxMAIngressQueueARN: arn:aws:sqs:eu-west-2:729485541398:self-integration-EC-SQS-Output-Queue-accountsIntervention
      TxMAIngressQueueKmsKeyARN: arn:aws:kms:eu-west-2:729485541398:key/c360ee61-da3b-48de-998e-68cb91743414
      OrchestrationVPCID: vpc-04444d1dc96d8822c # Orchestration Integration VPC ID
      AuthenticationVPCID: vpc-04444d1dc96d8822c # Authentication Integration VPC ID
      OneLoginHomeVPCID: vpc-048c9133a5998efe7 # One Login Home Integration VPC ID
      UniqueVPCEndpointIDs: vpce-068df58b11adba0c7 # Authentication & Orchestration Integration Shared VPC Endpoint ID
      DynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables # pragma: allowlist secret
    production:
      LambdaLogLevel: INFO
      AccountDeletionProcessorSNSTopicARN: arn:aws:sns:eu-west-2:026991849909:UserAccountDeletion
      TxMAAccountID: 451773080033
      TxMAIngressQueueARN: arn:aws:sqs:eu-west-2:451773080033:self-production-EC-SQS-Output-Queue-accountsIntervention
      TxMAIngressQueueKmsKeyARN: arn:aws:kms:eu-west-2:451773080033:key/5bbb4188-6774-4fe8-a78a-968f5e435295
      OrchestrationVPCID: vpc-00012e96e1cd0bf95 # Orchestration Production VPC ID
      AuthenticationVPCID: vpc-00012e96e1cd0bf95 # Authentication Production VPC ID
      OneLoginHomeVPCID: vpc-0c94e753d20410154 # One Login Home Production VPC ID
      UniqueVPCEndpointIDs: vpce-0e7b281bd24fbd378 # Authentication & Orchestration Production Shared VPC Endpoint ID
      DynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables # pragma: allowlist secret

Globals:
  Function:
    Runtime: nodejs20.x
    Architectures:
      - arm64
    Tracing: Active
    AutoPublishAlias: live
    CodeUri: ../../handlers
    KmsKeyArn: !GetAtt LambdaEnvironmentVariableEncryptionKey.Arn
    Environment:
      Variables:
        POWERTOOLS_LOG_LEVEL: !FindInMap [ EnvConfig, !Ref Environment, LambdaLogLevel ]
        POWERTOOLS_SERVICE_NAME: !Ref AWS::StackName
        CLOUDWATCH_METRICS_NAMESPACE: !Ref SystemTagValue
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}' # pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvConfig, !Ref Environment, DynatraceSecretArn ]
        DT_CONNECTION_BASE_URL: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}' # pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvConfig, !Ref Environment, DynatraceSecretArn ]
        DT_CLUSTER_ID: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}' # pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvConfig, !Ref Environment, DynatraceSecretArn ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}' # pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvConfig, !Ref Environment, DynatraceSecretArn ]
        DT_TENANT: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}' # pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvConfig, !Ref Environment, DynatraceSecretArn ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
    VpcConfig:
      SubnetIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
        - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
    Layers: #Dynatrace lambda layer
      - !Sub
        - '{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}' # pragma: allowlist secret # Node.js layer for all Lambda's
        - SecretArn: !FindInMap [ EnvConfig, !Ref Environment, DynatraceSecretArn ]

Resources:
  ### Interventions Processor ###
  InterventionsProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-InterventionsProcessorFunction"
      Description: "Processes intervention events and updates account's intervention status."
      DeploymentPreference:
        Type: !If
            - IsProd
            - !Ref LambdaDeploymentPreference
            - AllAtOnce
        Alarms:
          - !Ref InterventionsProcessorFunctionErrorsAlarm
          - !Ref ErrorPublishingEventToTxMAAlarm
          - !Ref InterventionsProcessorFunctionMetricErrorsAlarm
        Role: !GetAtt CodeDeployServiceRole.Arn
      Timeout: 5
      Handler: interventions-processor-handler.handler
      MemorySize: 512
      Role: !GetAtt InterventionsProcessorFunctionRole.Arn
      CodeSigningConfigArn: !If [ UseCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue ]
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !If
              - IsInternal
              - !GetAtt TxMAIngressQueue.Arn
              - !FindInMap [ EnvConfig, !Ref Environment, TxMAIngressQueueARN ]
            BatchSize: 1
            Enabled: true
            FunctionResponseTypes:
              - ReportBatchItemFailures
      Environment:
        Variables:
          METRIC_SERVICE_NAME: "InterventionsProcessorFunction"
          TABLE_NAME:
            Fn::ImportValue: !Sub "${CoreStackName}-AccountStatusTableName"
          TXMA_QUEUE_URL: !Ref TxMAEgressQueue
          HISTORY_RETENTION_SECONDS: 63072000
      Tags:
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue
        CheckovRulesToSkip: CKV_AWS_116.CKV_AWS_115
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - interventions-processor-handler.ts


  InterventionsProcessorFunctionInvokePermission:
    DependsOn: InterventionsProcessorFunctionAliaslive
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Join
        - ':'
        - - 'function'
          - !Select [ 6, !Split [ ':', !GetAtt InterventionsProcessorFunction.Arn ] ]
          - 'live'
      Action: lambda:InvokeFunction
      Principal: sqs.amazonaws.com
      SourceAccount: !If
        - IsInternal
        - !Ref AWS::AccountId
        - !FindInMap [ EnvConfig, !Ref Environment, TxMAAccountID ]
      SourceArn: !If
        - IsInternal
        - !GetAtt TxMAIngressQueue.Arn
        - !FindInMap [ EnvConfig, !Ref Environment, TxMAIngressQueueARN ]

  InterventionsProcessorFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-InterventionsProcessorFunctionRole"
      Description: !Sub "The role assumed by ${AWS::StackName}-InterventionsProcessorFunction"
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-InterventionsProcessorFunctionRolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueAttributes"
                Resource: !If
                  - IsInternal
                  - !GetAtt TxMAIngressQueue.Arn
                  - !FindInMap [ EnvConfig, !Ref Environment, TxMAIngressQueueARN ]
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  InterventionsProcessorFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-InterventionsProcessorFunctionPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource:
              - !GetAtt InterventionsProcessorFunctionLogGroup.Arn
          - Effect: Allow
            Action:
              - "sqs:SendMessage"
            Resource: !GetAtt TxMAEgressQueue.Arn
          - Effect: Allow
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource: !GetAtt SQSEncryptionKey.Arn
          - Effect: Allow
            Action:
              - "dynamodb:UpdateItem"
              - "dynamodb:Query"
            Resource:
              - Fn::ImportValue: !Sub "${CoreStackName}-AccountStatusTableArn"
          - Effect: "Allow"
            Action:
              - "cloudwatch:PutMetricData"
            Resource:
              - "*"
            Condition:
              StringEquals:
                cloudwatch:namespace: !Ref SystemTagValue
          - Effect: Allow
            Action:
              - "kms:decrypt"
            Resource:
              - Fn::ImportValue: !Sub "${CoreStackName}-AccountStatusTableEncryptionKeyArn"
      Roles:
        - !Ref InterventionsProcessorFunctionRole

  InterventionsProcessorFunctionTxMAKeyPolicy:
    Type: AWS::IAM::Policy
    Condition: IsNotInternal
    Properties:
      PolicyName: !Sub "${AWS::StackName}-InterventionsProcessorFunctionTxMAKeyPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource: !FindInMap [ EnvConfig, !Ref Environment, TxMAIngressQueueKmsKeyARN ]
      Roles:
        - !Ref InterventionsProcessorFunctionRole

  InterventionsProcessorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-InterventionsProcessorFunction"
      RetentionInDays: 30
      KmsKeyId: !GetAtt CloudWatchEncryptionKey.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "/aws/lambda/${AWS::StackName}-InterventionsProcessorFunction"

  InterventionsProcessorFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref CSLSSubscriptionEndpointArn
      LogGroupName: !Ref InterventionsProcessorFunctionLogGroup
      FilterPattern: "{$.message != \"Sensitive info*\"}"

  InterventionsProcessorLambdaErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ $.message = "Error caught, message will be retried." }'
      LogGroupName: !Ref InterventionsProcessorFunctionLogGroup
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: !Ref SystemTagValue
          MetricName: InterventionsProcessorLambdaError
          Unit: Count

### Account Deletion Processor ###

  AccountDeletionProcessorSNSTopic:
    Type: AWS::SNS::Topic
    Condition: IsInternal
    Properties:
      KmsMasterKeyId: !Ref AccountDeletionProcessorSNSKmsKey
      TopicName: !Sub "${AWS::StackName}-AccountDeletionProcessorSNSTopic"
      TracingConfig: "Active"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  AccountDeletionProcessorFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_115: Function is not configured for function-level concurrent execution Limit
    Properties:
      FunctionName: !Sub '${AWS::StackName}-AccountDeletionProcessorFunction'
      Description: "Updates an account intervention status indicating that the account has been deleted."
      DeploymentPreference:
        Type: !If
          - IsProd
          - !Ref LambdaDeploymentPreference
          - AllAtOnce
        Alarms:
          - !Ref AccountDeletionProcessorFunctionErrorsAlarm
        Role: !GetAtt CodeDeployServiceRole.Arn
      Timeout: 10
      Handler: account-deletion-processor-handler.handler
      MemorySize: 128
      Role: !GetAtt AccountDeletionProcessorFunctionRole.Arn
      CodeSigningConfigArn: !If [ UseCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue ]
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: !Sub "${CoreStackName}-AccountStatusTableName"
          DELETED_ACCOUNT_RETENTION_SECONDS: 63072000 #2 Years in Seconds
          METRIC_SERVICE_NAME: AccountDeletionProcessorFunction
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            RedrivePolicy: !Sub "{ \"deadLetterTargetArn\": \"arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-AccountDeletionProcessorDLQ\" }"
            SqsSubscription:
              BatchSize: 1
              Enabled: true
              QueueArn: !GetAtt AccountDeletionProcessorQueue.Arn
              QueueUrl: !Ref AccountDeletionProcessorQueue
            Topic: !If
              - IsInternal
              - !Ref AccountDeletionProcessorSNSTopic
              - !FindInMap [ EnvConfig, !Ref Environment, AccountDeletionProcessorSNSTopicARN ]
      Tags:
        CheckovRulesToSkip: CKV_AWS_116.CKV_AWS_115
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - account-deletion-processor-handler.ts

  AccountDeletionProcessorFunctionPermission:
    DependsOn: AccountDeletionProcessorFunctionAliaslive
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Join
        - ':'
        - - 'function'
          - !Select [ 6, !Split [ ':', !GetAtt AccountDeletionProcessorFunction.Arn ] ]
          - 'live'
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !If
        - IsInternal
        - !Ref AccountDeletionProcessorSNSTopic
        - !FindInMap [ EnvConfig, !Ref Environment, AccountDeletionProcessorSNSTopicARN ]

  AccountDeletionProcessorFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:  !Sub '${AWS::StackName}-AccountDeletionProcessorFunctionRole'
      Description: !Sub "The role assumed by ${AWS::StackName}-AccountDeletionProcessorFunction"
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-AccountDeletionProcessorFunctionRolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueAttributes"
                Resource: !GetAtt AccountDeletionProcessorQueue.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  AccountDeletionProcessorFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-AccountDeletionProcessorFunctionPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource:
              - !GetAtt AccountDeletionProcessorFunctionLogGroup.Arn
          - Effect: Allow
            Action:
              - "kms:GenerateDataKey"
              - "kms:Decrypt"
            Resource:
              - !GetAtt SQSEncryptionKey.Arn
              - !GetAtt AccountDeletionProcessorSNSKmsKey.Arn
          - Effect: Allow
            Action:
              - "dynamodb:UpdateItem"
            Resource:
              - Fn::ImportValue: !Sub "${CoreStackName}-AccountStatusTableArn"
          - Effect: Allow
            Action:
              - "kms:decrypt"
            Resource:
              - Fn::ImportValue: !Sub "${CoreStackName}-AccountStatusTableEncryptionKeyArn"
      Roles:
        - !Ref AccountDeletionProcessorFunctionRole

  AccountDeletionProcessorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AccountDeletionProcessorFunction}"
      RetentionInDays: 30
      KmsKeyId: !GetAtt CloudWatchEncryptionKey.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "/aws/lambda/${AccountDeletionProcessorFunction}"

  AccountDeletionProcessorFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref CSLSSubscriptionEndpointArn
      LogGroupName: !Ref AccountDeletionProcessorFunctionLogGroup
      FilterPattern: "{$.message != \"Sensitive info*\"}"

  AccountDeletionProcessorQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-AccountDeletionProcessorQueue"
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt SQSEncryptionKey.Arn
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AccountDeletionProcessorDLQ.Arn
        maxReceiveCount: 60
      VisibilityTimeout: 10
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  AccountDeletionProcessorQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref AccountDeletionProcessorQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - "sqs:SendMessage"
            Resource: !GetAtt AccountDeletionProcessorQueue.Arn
            Principal:
              Service: sns.amazonaws.com
            Condition:
              ArnEquals:
                aws:SourceArn:
                  - !If
                    - IsInternal
                    - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-AccountDeletionProcessorSNSTopic"
                    - !FindInMap [ EnvConfig, !Ref Environment, AccountDeletionProcessorSNSTopicARN ]

  AccountDeletionProcessorDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-AccountDeletionProcessorDLQ"
      KmsMasterKeyId: !GetAtt SQSEncryptionKey.Arn
      VisibilityTimeout: 10
      MessageRetentionPeriod: 1209600
      RedriveAllowPolicy:
        redrivePermission: byQueue
        sourceQueueArns:
          - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-AccountDeletionProcessorQueue"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  AccountDeletionProcessorQueueNameSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The Name of the Account Deletion Processor Queue
      Name: !Sub "/${AWS::StackName}/SQS/AccountDeletionProcessorQueue/Name"
      Type: String
      Value: !GetAtt AccountDeletionProcessorQueue.QueueName
      Tags:
        Environment: !Ref Environment
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  AccountDeletionProcessorDLQNameSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The Name of the Account Deletion Processor DLQ
      Name: !Sub "/${AWS::StackName}/SQS/AccountDeletionProcessorDLQ/Name"
      Type: String
      Value: !GetAtt AccountDeletionProcessorDLQ.QueueName
      Tags:
        Environment: !Ref Environment
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

 #### TxMA Queues ####
  TxMAIngressQueue:
    Type: AWS::SQS::Queue
    Condition: IsInternal
    Properties:
      QueueName: !Sub "${AWS::StackName}-TxMAIngressQueue"
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt SQSEncryptionKey.Arn
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TxMAIngressDLQ.Arn
        maxReceiveCount: 60
      VisibilityTimeout: 5
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  TxMAIngressQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Condition: IsInternal
    Properties:
      Queues:
        - !Ref TxMAIngressQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - "sqs:SendMessage"
            Resource: !GetAtt TxMAIngressQueue.Arn
            Principal:
              Service: sns.amazonaws.com

  TxMAIngressDLQ:
    Type: AWS::SQS::Queue
    Condition: IsInternal
    Properties:
      QueueName: !Sub "${AWS::StackName}-TxMAIngressDLQ"
      KmsMasterKeyId: !Ref SQSEncryptionKeyAlias
      VisibilityTimeout: 0
      MessageRetentionPeriod: 1209600
      RedriveAllowPolicy:
        redrivePermission: byQueue
        sourceQueueArns:
          - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-TxMAIngressQueue"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  TxMAEgressQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-TxMAEgressQueue"
      KmsMasterKeyId: !Ref SQSEncryptionKeyAlias
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TxMAEgressDLQ.Arn
        maxReceiveCount: 60
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 60
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  TxMAEgressQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref TxMAEgressQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "sqs:DeleteMessage"
              - "sqs:GetQueueAttributes"
              - "sqs:ChangeMessageVisibility"
              - "sqs:ReceiveMessage"
            Resource:
              - !GetAtt TxMAEgressQueue.Arn
            Principal:
              AWS:
                - !Join [ "", [ "arn:aws:iam::", !FindInMap [ EnvConfig, !Ref Environment, TxMAAccountID ], ":root"] ]
          - Effect: Allow
            Action:
              - "sqs:SendMessage"
            Resource:
              - !GetAtt TxMAEgressQueue.Arn
            Principal:
              Service:
                - lambda.amazonaws.com
            Condition:
              ArnEquals:
                aws:SourceArn:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-InterventionsProcessorFunction"

  TxMAEgressQueueNameSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The Name of the TxMA Egress Queue
      Name: !Sub "/${AWS::StackName}/SQS/TxMAEgressQueue/Name"
      Type: String
      Value: !GetAtt TxMAEgressQueue.QueueName
      Tags:
        Environment: !Ref Environment
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  TxMAEgressDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-TxMAEgressDLQ"
      KmsMasterKeyId: !Ref SQSEncryptionKey
      VisibilityTimeout: 0
      MessageRetentionPeriod: 1209600
      RedriveAllowPolicy:
        redrivePermission: byQueue
        sourceQueueArns:
          - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-TxMAEgressQueue"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  TxMAEgressDLQNameSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The Name of the TxMA Egress DLQ
      Name: !Sub "/${AWS::StackName}/SQS/TxMAEgressDLQ/Name"
      Type: String
      Value: !GetAtt TxMAEgressDLQ.QueueName
      Tags:
        Environment: !Ref Environment
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

### Encryption Key SQS & SNS ###

  AccountDeletionProcessorSNSKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
          - Effect: Allow
            Principal:
              Service:
                - "sns.amazonaws.com"
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource: "*"
            Condition:
              ArnEquals:
                aws:SourceArn:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-AccountDeletionProcessorFunction"
                  - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-AccountDeletionProcessorSNSTopic"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  AccountDeletionProcessorSNSKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-AccountDeletionProcessorSNSKmsKey"
      TargetKeyId: !GetAtt AccountDeletionProcessorSNSKmsKey.Arn

  LambdaEnvironmentVariableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "KMS key used to encrypt lambda environment variables"
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: "Allow"
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "kms:Decrypt"
            Resource: "*"
            Condition:
              ArnLike:
                "aws:SourceArn": !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "${AWS::StackName}-LambdaEnvironmentVariableEncryptionKey"

  LambdaEnvironmentVariableEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-LambdaEnvironmentVariableEncryptionKey"
      TargetKeyId: !GetAtt LambdaEnvironmentVariableEncryptionKey.Arn

  SQSEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: AWS KMS key for encrypting the contents of messages in SQS queues
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: sqs.amazonaws.com
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource: "*"
            Condition:
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:*"
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource: "*"
            Condition:
              ArnEquals:
                aws:SourceArn: !If
                  - IsInternal
                  - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-AccountDeletionProcessorSNSTopic"
                  - !Ref AWS::NoValue
          - Effect: Allow
            Principal:
              AWS: !Join [ "", [ "arn:aws:iam::", !FindInMap [ EnvConfig, !Ref Environment, TxMAAccountID ], ":root"] ]
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource: "*"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "${AWS::StackName}-SQSEncryptionKey"

  SQSEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-SQSEncryptionKey"
      TargetKeyId: !GetAtt SQSEncryptionKey.Arn

  StatusRetrieverFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_115: Function is not configured for function-level concurrent execution Limit
    Properties:
      FunctionName: !Sub '${AWS::StackName}-StatusRetrieverFunction'
      Description: "Retrieves the account's intervention status."
      DeploymentPreference:
        Type: !If
          - IsProd
          - !Ref LambdaDeploymentPreference
          - AllAtOnce
        Alarms:
          - !Ref StatusRetrieverFunctionErrorsAlarm
          - !Ref 5xxErrorsStatusRetrieverAlarm
        Role: !GetAtt CodeDeployServiceRole.Arn
      MemorySize: 512
      CodeSigningConfigArn: !If [ UseCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue ]
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME:
            Fn::ImportValue: !Sub "${CoreStackName}-AccountStatusTableName"
          METRIC_SERVICE_NAME: StatusRetrieverFunction
      Handler: status-retriever-handler.handle
      Role: !GetAtt StatusRetrieverFunctionRole.Arn
      Tags:
        CheckovRulesToSkip: CKV_AWS_116.CKV_AWS_115
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - status-retriever-handler.ts

  StatusRetrieverFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:  !Sub '${AWS::StackName}-StatusRetrieverFunctionRole'
      Description: !Sub "The role assumed by the ${AWS::StackName}-StatusRetrieverFunction"
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  StatusRetrieverFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-StatusRetrieverFunctionPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource:
              - !GetAtt StatusRetrieverFunctionLogGroup.Arn
          - Effect: Allow
            Action:
              - "dynamodb:Query"
            Resource:
              - Fn::ImportValue: !Sub "${CoreStackName}-AccountStatusTableArn"
          - Effect: Allow
            Action:
              - "kms:decrypt"
            Resource:
              - Fn::ImportValue: !Sub "${CoreStackName}-AccountStatusTableEncryptionKeyArn"
      Roles:
        - !Ref StatusRetrieverFunctionRole

  StatusRetrieverFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${StatusRetrieverFunction}"
      RetentionInDays: 30
      KmsKeyId: !GetAtt CloudWatchEncryptionKey.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "/aws/lambda/${StatusRetrieverFunction}"

  StatusRetrieverFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref CSLSSubscriptionEndpointArn
      LogGroupName: !Ref StatusRetrieverFunctionLogGroup
      FilterPattern: "{$.message != \"Sensitive info*\"}"

  ### Invoke API Gateway ###
  InvokePrivateAPIGatewayFunction:
    Condition: IsInternal
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_115: Function is not configured for function-level concurrent execution Limit
    Properties:
      FunctionName: !Sub '${AWS::StackName}-InvokePrivateAPIGatewayFunction'
      Description: 'Utility function to invoke the Private REST API (Non-Prod Only)'
      CodeSigningConfigArn: !If [ UseCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue ]
      Timeout: 10
      MemorySize: 256
      Role: !GetAtt InvokePrivateAPIGatewayFunctionRole.Arn
      Environment:
        Variables:
          USER_ID: ""
          BASE_URL: !Join
            - ""
            - - https://
              - !GetAtt PrivateRestApi.RestApiId
              - !Sub .execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}
          END_POINT: /ais
          QUERY_PARAMETERS: ""
          HTTP_REQUEST_METHOD: GET
      Handler: invoke-private-api.handle
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
      Tags:
        CheckovRulesToSkip: CKV_AWS_116.CKV_AWS_115
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints:
          - invoke-private-api.ts

  InvokePrivateAPIGatewayFunctionRole:
    Condition: IsInternal
    Type: AWS::IAM::Role
    Properties:
      RoleName:  !Sub '${AWS::StackName}-InvokePrivateAPIGatewayFunctionRole'
      Description: !Sub "The role assumed by ${AWS::StackName}-InvokePrivateAPIGatewayFunction"
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  InvokePrivateAPIGatewayFunctionPolicy:
    Condition: IsInternal
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-InvokePrivateAPIGatewayFunctionPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource:
              - !GetAtt InvokePrivateAPIGatewayFunctionLogGroup.Arn
      Roles:
        - !Ref InvokePrivateAPIGatewayFunctionRole

  InvokePrivateAPIGatewayFunctionLogGroup:
    Condition: IsInternal
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${InvokePrivateAPIGatewayFunction}"
      RetentionInDays: 30
      KmsKeyId: !GetAtt CloudWatchEncryptionKey.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "/aws/lambda/${InvokePrivateAPIGatewayFunction}"

  # Private API Gateway resources
  PrivateRestApi:
    Type: AWS::Serverless::Api
    Properties:
      # checkov:skip=CKV_AWS_120: API Gateway caching not enabled
      Name: !Sub "${AWS::StackName}-PrivateRestApi"
      AlwaysDeploy: true
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: "../../specs/api.yaml"
      Description: "Private REST API that provides method to interact with the Account Interventions Services"
      StageName: !Ref ApiStageName
      OpenApiVersion: 3.0.3
      PropagateTags: true
      Auth:
        ResourcePolicy:
          IntrinsicVpcWhitelist:
            - !FindInMap [ EnvConfig, !Ref Environment, AuthenticationVPCID ]
            - !FindInMap [ EnvConfig, !Ref Environment, OneLoginHomeVPCID ]
            - !FindInMap [ EnvConfig, !Ref Environment, OrchestrationVPCID ]
      AccessLogSetting:
        Format: >-
          {
          "requestId": "$context.requestId",
          "requestTime": "$context.requestTime",
          "requestTimeEpoch": "$context.requestTimeEpoch",
          "httpMethod": "$context.httpMethod",
          "domainName": "$context.domainName",
          "path": "$context.path",
          "routeKey": "$context.routeKey",
          "protocol": "$context.protocol",
          "status": "$context.status",
          "responseLength": "$context.responseLength",
          "responseLatency": "$context.responseLatency",
          "authorizerLatency": "$context.authorizer.latency",
          "integrationStatus": "$context.integrationStatus",
          "integrationLatency": "$context.integrationLatency",
          "integrationErrorMessage": "$context.integrationErrorMessage",
          "errorMessage": "$context.error.message",
          "errorResponseType": "$context.error.responseType",
          "validationErrorString": "$context.error.validationErrorString",
          }
        DestinationArn: !GetAtt PrivateAPIGatewayAccessLogGroup.Arn
      CacheClusterEnabled: false
      TracingEnabled: true
      EndpointConfiguration:
        Type: PRIVATE
        VpcEndpointIds: !If
          - IsNotInternal
          - !Split [",",  !FindInMap [ EnvConfig, !Ref Environment, UniqueVPCEndpointIDs ] ]
          - []
      Tags:
        CheckovRulesToSkip: CKV_AWS_120
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  PrivateRestApiNameSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Description: PrivateRestApi Name
      Name: !Sub /${AWS::StackName}/PrivateRestApi/Name
      Type: String
      Value: !Sub "${AWS::StackName}-PrivateRestApi" # No return value for Rest API name so please keep manual value same as the PrivateRestApi resource Name property
      Tags:
        Environment: !Ref Environment
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  PrivateAPIGatewayAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/apigateway/${PrivateRestApi}/${ApiStageName}"
      RetentionInDays: 30
      KmsKeyId: !GetAtt CloudWatchEncryptionKey.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: PrivateApiGatewayAccessLogGroup
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "/aws/apigateway/${PrivateRestApi}/${ApiStageName}"

  PrivateAPIGatewayLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref CSLSSubscriptionEndpointArn
      LogGroupName: !Ref PrivateAPIGatewayAccessLogGroup
      FilterPattern: ""

  PrivateGatewayStatusRetrieverFunctionPermission:
    DependsOn: StatusRetrieverFunctionAliaslive
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Join
        - ':'
        - - 'function'
          - !Select [ 6, !Split [ ':', !GetAtt StatusRetrieverFunction.Arn ] ]
          - 'live'
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PrivateRestApi}/*/*" # allow any stage and any method to use status retriever

  CloudWatchEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: AWS KMS key for encrypting CloudWatch logs
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "${AWS::StackName}-CloudWatchEncryptionKey"

  CloudWatchEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-CloudWatchEncryptionKey"
      TargetKeyId: !GetAtt CloudWatchEncryptionKey.Arn

  #
  #  Canary Deployment CloudWatch Alarms
  #

  StatusRetrieverFunctionErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingSNSLowAlertNotificationTopicARN
      AlarmDescription: !Sub "Errors returned from the StatusRetrieverFunction Lambda. ${RunBookURL}"
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-StatusRetrieverFunction:live"
        - Name: FunctionName
          Value: !Ref StatusRetrieverFunction
        - Name: ExecutedVersion
          Value: !GetAtt StatusRetrieverFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  5xxErrorsStatusRetrieverAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingSNSLowAlertNotificationTopicARN
      AlarmDescription: !Sub "Lambda returning 5xx response. ${RunBookURL}"
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "${AWS::StackName}-PrivateRestApi"
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  InterventionsProcessorFunctionErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingSNSLowAlertNotificationTopicARN
      AlarmDescription: !Sub "Errors returned from the InterventionsProcessorFunction Lambda. ${RunBookURL}"
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-InterventionsProcessorFunction:live"
        - Name: FunctionName
          Value: !Ref InterventionsProcessorFunction
        - Name: ExecutedVersion
          Value: !GetAtt InterventionsProcessorFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ErrorPublishingEventToTxMAAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingSNSLowAlertNotificationTopicARN
      AlarmDescription: !Sub "Publishing to TxMA has failed due to incorrect Lambda permissions. ${RunBookURL}"
      MetricName: ERROR_PUBLISHING_EVENT_TO_TXMA
      Namespace: !Ref SystemTagValue
      Dimensions:
        - Name: service
          Value: InterventionsProcessorFunction
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  InterventionsProcessorFunctionMetricErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingSNSLowAlertNotificationTopicARN
      AlarmDescription: !Sub "Interventions Processor Function Alarm for InterventionsProcessorLambdaErrorMetricFilter. ${RunBookURL}"
      MetricName: InterventionsProcessorLambdaError
      Namespace: !Ref SystemTagValue
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  AccountDeletionProcessorFunctionErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingSNSLowAlertNotificationTopicARN
      AlarmDescription: !Sub "Errors returned from the AccountDeletionProcessorFunction Lambda. ${RunBookURL}"
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-AccountDeletionProcessorFunction:live"
        - Name: FunctionName
          Value: !Ref AccountDeletionProcessorFunction
        - Name: ExecutedVersion
          Value: !GetAtt AccountDeletionProcessorFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  #
  #  Code Deploy Service Role
  #

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]

Outputs:
  PrivateApiEndpoint:
    Description: "Private API Gateway endpoint URL for AIS methods"
    Value: !Sub "https://${PrivateRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}"

  TxMAEgressSqsQueueUrl:
    Description: "Endpoint URL for TxMA Egress Queue"
    Value: !Ref TxMAEgressQueue

  TxMAIngressSqsQueueUrl:
    Condition: IsInternal
    Description: "Endpoint URL for TxMA Ingress Queue"
    Value: !Ref TxMAIngressQueue

  AccountDeletionProcessorSNSTopicARN:
    Condition: IsInternal
    Description: "ARN for the AccountDeletionProcessorSNSTopic SNS Topic"
    Value: !Ref AccountDeletionProcessorSNSTopic
